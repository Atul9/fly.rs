union Any {
  TimerStart,
  TimerReady,
  TimerClear,
  HttpRequest,
  HttpResponse,
  StreamChunk,
  HttpRequestStart,
  FetchHttpResponse,
  CacheGet,
  CacheGetReady,
  CacheSet,
  CacheSetReady,
  CryptoDigest,
  CryptoDigestReady,
}

enum ErrorKind: byte {
  NoError = 0,
}

table Base {
  cmd_id: uint32;
  sync: bool = false;
  error_kind: ErrorKind = NoError;
  error: string;
  msg: Any;
}

table TimerStart {
  id: uint;
  delay: uint;
}

table TimerReady {
  id: uint;
  canceled: bool;
}

table TimerClear {
  id: uint;
}

enum HttpMethod: byte {
  Get = 0,
  Head,
  Post,
  Put,
  Patch,
  Delete,
  Connect,
  Options,
  Trace,
}

table HttpHeader {
  key: string;
  value: string;
}

table StreamChunk {
  id: uint;
  done: bool = false;
}

table HttpRequest {
  id: uint;
  method: HttpMethod;
  url: string;
  headers: [HttpHeader];
  body: bool;
}

table HttpResponse {
  id: uint;
  headers: [HttpHeader];
  body: bool;
}

table HttpRequestStart {
  id: uint;
}

table FetchHttpResponse {
  id: uint;
  headers: [HttpHeader];
  body: bool;
}

table CacheGet {
  key: string;
}

table CacheGetReady {
  id: uint;
  stream: bool;
}

table CacheSet {
  key: string;
}

table CacheSetReady {
  id: uint;
}

table CryptoDigest {
  algo: string;
}

table CryptoDigestReady {
  buffer: [ubyte];
}

root_type Base;