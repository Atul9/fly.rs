language: rust
rust:
- 1.31.0
matrix:
  include:
  - os: linux
    sudo: required
    dist: trusty
  - os: osx
services:
- postgresql
- redis
cache:
  cargo: true
  yarn: true
  directories:
  - node_modules
  - v8env/node_modules
  - third_party/flatbuffers
  - "$HOME/Library/Caches/Homebrew"
addons:
  postgresql: '9.6'
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-5
    - g++-5
    - binutils-2.26
before_install:
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    export CXX="g++-5" CC="gcc-5"
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5
    sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-5 100
    sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-5 100
    export PATH=/usr/lib/binutils-2.26/bin:${PATH}
  fi
install:
- export RELEASE_NAME=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH;
  else echo pr$TRAVIS_PULL_REQUEST_BRANCH; fi)
- export RELEASE_FILENAME=fly-${TRAVIS_OS_NAME}-x64.tar.gz
- export PATH=$PATH:$TRAVIS_BUILD_DIR/third_party/flatbuffers/
- "./scripts/setup.sh"
before_script:
- 
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rm -rf /usr/local/var/postgres; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then initdb /usr/local/var/postgres; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start postgres; fi
- 
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then while ! pg_isready; do sleep 1; done;
  createuser -s postgres; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start redis; fi
script:
- RUST_BACKTRACE=1 cargo test
- "./scripts/build-release.sh"
before_cache:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cleanup; fi
before_deploy:
- "./scripts/prepare-release.sh"
deploy:
- provider: releases
  overwrite: true
  api_key:
    secure: VsCHyGpPc02F3LiK+nqMDSPSEKmzgKyAhwVJQJ2mLjso74N1NGRsCDgKIQAOoLzcJRVNZFrpnlbOxKoyTGg1x8b6MnpPmqR8j/LVdKoud6Nhp8Ufw1I/9XwPpyjAhSNKnQq+1h1DpbWbob4bS5BR23PRbIySPUx570W3G8y3IritqorvpM4Qn12fyetWoZxRxWt9QAnrEV2Pj8ULR1C2jBtQPNAVLKm5FcDPBxzQcqXRZjARQtdjNU5tOB1bEm4zg8QNl/hDHi+5WZ/FQ/gZR28cAdhAb8GTC8UU7hTP5TTt2G1UimI27RPxyAyc/eJ9JU2ixRGzjDPvv6hk+KkGGjvuJccKHqR+bgHJ8lS8gPPmpvRMM9uVTAsI/pPA51OgveaHknMCCefiDYGgMq2cIW3UmUMHaB1m9SmBrIqCfEOwPp8f4KEtO55B9myuvqOYvlL4pJrcSUucjNGkm7guqCR4u3L3D0cIkTyk3fTbZyaeAxkSlcYvcff8BpRuFI8YiTybtLxqy0+KoDNoXr/d34/dwFyQNeRPN7H4EWGkzFeHpbfm+aCXGtqF8fMj/tOT7yrOAwy2rvD9/Gx8nzdY7j+DMIXB9HAR3y5Xrpiba0nedV4jww2s1dKuf96Iac3CZrO1qOXvNMKPCVSrp/rmQ5r6REfTQDe6NBONPvjjTX0=
  file: release/${RELEASE_FILENAME}
  skip_cleanup: true
  on:
    repo: superfly/fly.rs
    tags: true
- provider: s3
  access_key_id: "$AWS_ACCESS_KEY_ID"
  secret_access_key: "$AWS_SECRET_ACCESS_KEY"
  bucket: fly-proxy
  local_dir: release
  upload-dir: "${RELEASE_NAME}"
  skip_cleanup: true
  acl: public_read
  region: us-east-1
  detect_encoding: true
env:
  global:
  - AWS_ACCESS_KEY_ID=AKIAIUEJ6IB7XWPIBUXA
